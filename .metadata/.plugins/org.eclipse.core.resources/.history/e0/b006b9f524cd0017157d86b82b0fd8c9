package 小功能;

import java.util.Scanner;

public class Problem1030 {

	public static void main(String[] args) {
		
		Scanner in=new Scanner(System.in);
		int M=in.nextInt();
		int N=in.nextInt();
		
		//1.把M,N转化为第几排的第几个
		DeltaWave d1=new DeltaWave(M);
		DeltaWave d2=new DeltaWave(N);
		
		int result=0;
		
		DeltaWave high,low;
		if(d1.hangshu==d2.hangshu){
			result=Math.abs(d1.sequence-d2.sequence);
		}else{
			if(d1.hangshu<d2.hangshu){
				high=d1;
				low=d2;
			}else{
				high=d2;
				low=d1;
			}
			int left=0,right=0;
			if(high.sequence%2!=0){  //高处那个是上三角
				left=high.sequence;
				right=left+(low.hangshu-high.hangshu)*2;
				
				if(low.sequence>=left&&low.sequence<=right){
					if(low.sequence%2!=0)
						result=(low.hangshu-high.hangshu)*2;
					else
						result=(low.hangshu-high.hangshu)*2-1;
				}else if(low.sequence>right){
					result=(low.hangshu-high.hangshu)*2+(low.sequence-right);
				}else if(low.sequence<left){
					result=(low.hangshu-high.hangshu)*2+(left-low.sequence);
				
							
			}else{  //高处那个是下三角
				
				int reference=high.sequence+(low.hangshu-high.hangshu);
				
				
				
				
				
				
			}
				
				
				
				
				
				
			}
			
			
			
			
			
			
			
		}
		
		
		
		
		
		if(d1.sequence%2!=0){  
			
			
			
			
		}
		
		
		

	}

}
class DeltaWave{
	int hangshu;
	int sequence;
	public DeltaWave(int num) {
		double temp=Math.sqrt((double)num);
		hangshu=(int)Math.ceil(temp);
		sequence=num-(hangshu-1)*(hangshu-1);
	}
	
	
	
	
}